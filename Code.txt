import React, { useState } from "react";
import axios from "axios";
 const diseases = [
  "Cancer",
  "Heart Disease",
  "Diabetes",
  // ... list of diseases from the database
];
 function StepForm() {
  const [currentDisease, setCurrentDisease] = useState(0);
  const [treatedForDisease, setTreatedForDisease] = useState(false);
  const [yearOfTreatment, setYearOfTreatment] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState("");
  
   const handleNextDisease = async () => {
    setIsLoading(true);
    setError("");
    try {
      // Send API request to the database
      const response = await axios.get(`/api/diseases/${currentDisease}`);
       // Check if response was successful
      if (response.status === 200) {
        setCurrentDisease(currentDisease + 1);
        setTreatedForDisease(false);
        setYearOfTreatment("");
      } else {
        setError("Failed to fetch the data from the server.");
      }
     } catch (error) {
      setError("Failed to connect to the server. Please try again later.");
    }
    setIsLoading(false);
  };
   const handlePrevDisease = () => {
    setCurrentDisease(currentDisease - 1);
    setTreatedForDisease(false);
    setYearOfTreatment("");
    setIsLoading(false);
    setError("");
  };
   const handleTreatedForDisease = (e) => {
    setTreatedForDisease(e.target.value === "yes");
  };
   const handleYearOfTreatment = (e) => {
    setYearOfTreatment(e.target.value);
  };
   return (
    <div>
      <h1>Step Form</h1>
      <div>
        <h2>{diseases[currentDisease]}</h2>
        <div>
          <label>Treated for this disease?</label>
          <select 
            value={treatedForDisease ? "yes" : "no"} 
            onChange={handleTreatedForDisease}
          >
            <option value="no">No</option>
            <option value="yes">Yes</option>
          </select>
        </div>
        {treatedForDisease && (
          <div>
            <label>Year of treatment:</label>
            <input 
              type="text" 
              value={yearOfTreatment} 
              onChange={handleYearOfTreatment} 
            />
          </div>
        )}
        {isLoading && <div>Loading...</div>}
        {error && <div>{error}</div>}
        <div>
          <button 
            onClick={handlePrevDisease} 
            disabled={currentDisease === 0 || isLoading}
          >
            Prev
          </button>
          <button 
            onClick={handleNextDisease} 
            disabled={isLoading}
          >
            Next
          </button>
        </div>
      </div>
    </div>
  );
}
 export default StepForm;





   Schema::create('control_measures', function (Blueprint $table) {
            $table->string('exercise')->nullable();
            $table->string('how_often')->nullable();
            $table->string('how_long')->nullable();
            $table->integer('height')->nullable();
            $table->integer('weight')->nullable();
            $table->string('chest_in')->nullable();
            $table->string('chest_out')->nullable();
            $table->string('mental_state')->nullable();
            $table->integer('le_glass')->nullable();
            $table->integer('le_woglass')->nullable();
            $table->integer('re_glass')->nullable();
            $table->integer('re_woglass')->nullable();
            $table->string('right_ear')->nullable();
            $table->string('left_ear')->nullable();
            $table->string('audiogram_comment')->nullable();
            $table->string('speech')->nullable();
        });


         Schema::create('cadio_vascular', function (Blueprint $table) {
           $table->string('apex_beat_position')->nullable();
           $table->string('rate')->nullable();
           $table->string('rhythm')->nullable();
           $table->string('sound')->nullable();
           $table->string('murmurs')->nullable();
           $table->string('blood_pressure')->nullable();
           $table->string('exercise_tolerance')->nullable();
        });

        Schema::create('respiratory', function (Blueprint $table) {
           $table->string('lungs')->nullable();
           $table->string('x_ray_comment')->nullable();
           $table->string('spirometry_comment')->nullable();
           $table->string('fev')->nullable();
           $table->string('fvc')->nullable();
           $table->string('sears')->nullable();
           $table->string('tenderness')->nullable();
           $table->string('hernia')->nullable();
           $table->string('organomegaly')->nullable();
           $table->string('kidney_enlargement')->nullable();
           $table->string('urine_appear')->nullable();
           $table->string('sg')->nullable();
           $table->string('albumin')->nullable();
           $table->string('sugar')->nullable();
           $table->string('deposit')->nullable();
           $table->string('evidence_of_disease')->nullable();
           $table->string('evidence_of_any_disease')->nullable();
           $table->string('lmp')->nullable();
           $table->string('parity')->nullable();
         });